import{_ as a,E as n,o as l,c as p,J as o,U as e}from"./chunks/framework.82cf92f3.js";const u=JSON.parse('{"title":"结构体","description":"结构体是 C 语言中非常重要的数据类型之一，它提供了一种灵活的方式来组合不同类型的数据。通过结构体定义和访问，我们可以将多个相关元素包装成一个单独的整体，并进行操作和修改。在实际开发中，结构体常用于描述复杂的数据结构和存储大量相关数据。","frontmatter":{"title":"结构体","head":[["meta",{"property":"og:title","content":"结构体"}],["meta",{"name":"description","content":"结构体是 C 语言中非常重要的数据类型之一，它提供了一种灵活的方式来组合不同类型的数据。通过结构体定义和访问，我们可以将多个相关元素包装成一个单独的整体，并进行操作和修改。在实际开发中，结构体常用于描述复杂的数据结构和存储大量相关数据。"}],["meta",{"name":"keywords","content":"结构体,结构体定义,结构体初始化,结构体访问,结构体大小"}],["meta",{"property":"og:description","content":"结构体是 C 语言中非常重要的数据类型之一，它提供了一种灵活的方式来组合不同类型的数据。通过结构体定义和访问，我们可以将多个相关元素包装成一个单独的整体，并进行操作和修改。在实际开发中，结构体常用于描述复杂的数据结构和存储大量相关数据。"}]]},"headers":[],"relativePath":"c/结构体.md","filePath":"c/结构体.md"}'),t={name:"c/结构体.md"},c=e(`<h1 id="结构体" tabindex="-1">结构体 <a class="header-anchor" href="#结构体" aria-label="Permalink to &quot;结构体&quot;" loading="lazy">​</a></h1><p>C语言中的结构体是一种自定义数据类型，可以用来存储不同类型的数据。它由多个成员变量组成，每个成员变量可以有不同的数据类型，通过结构体的成员访问符.来访问结构体中的元素。</p><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;" loading="lazy">​</a></h2><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> 结构体名 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    数据类型1 成员变量名1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    数据类型2 成员变量名2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;" loading="lazy">​</a></h2><p>对于一个已经定义好的结构体，我们需要为其成员变量赋值。有两种方式可以完成结构体的初始化：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> score</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>逐个成员变量进行初始化</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student stu</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">stu.name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">stu.age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">stu.score </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">90.5</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>使用结构体字面量进行初始化</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student stu </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90.5</span><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="访问" tabindex="-1">访问 <a class="header-anchor" href="#访问" aria-label="Permalink to &quot;访问&quot;" loading="lazy">​</a></h2><p>对于一个已经定义好的结构体，我们可以使用点号.来访问它的各个成员变量。 例如，在上面的示例代码中，我们通过 stu.name、stu.age 和 stu.score 来分别访问了该结构体中的各个属性值。</p><p>也可以使用指针访问</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student stu </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90.5</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">stu</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> p</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h2 id="结构体传参" tabindex="-1">结构体传参 <a class="header-anchor" href="#结构体传参" aria-label="Permalink to &quot;结构体传参&quot;" loading="lazy">​</a></h2><p>值传递</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> score</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">modify</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#A6ACCD;font-style:italic;">student</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">student</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">19</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">   // 我们对传入的结构体中的年龄进行修改</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> Student student </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">小明</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90.5</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">modify</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">student</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">student</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 还是 18, 值传递，函数内部改变的是局部变量</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>指针传递</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> score</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">modify</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">student</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">student</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">19</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">   // 我们对传入的结构体中的年龄进行修改</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> Student student </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">小明</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90.5</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">modify</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">student</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">student</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 19</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="结构体大小" tabindex="-1">结构体大小 <a class="header-anchor" href="#结构体大小" aria-label="Permalink to &quot;结构体大小&quot;" loading="lazy">​</a></h2><p>结构体的大小可以通过 sizeof 函数来计算，遵循下面的规则：</p><ul><li>规则一：结构体中的元素按照定义顺序依次置于内存上，并非紧密排列。从结构体首地址开始依次将元素放入内存时，元素会被放置在其对齐的大小的整数倍地址上;</li><li>规则二：如果结构体大小不是所有元素中最大对齐大小的整数倍，则结构体对齐到最大元素对齐大小的整数倍，填充空间放置到结构体末尾;</li><li>规则三：基本数据类型对齐大小为其自身大小，结构体数据类型的对齐大小为其元素中最大对齐元素的对齐大小。</li></ul><p>比如在 64 为操作系统上，计算下面结构体的大小： 8 + 4(此时地址位是8，满足int大小的整数倍) + 4(此时地址位是12，满足float大小的整数倍) = 16 满足 64 位操作系统的对齐的倍数，因此该结构体大小为 16.</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> score</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>又比如定义顺序发生变化时，计算下面的结构体的大小：4 + 4（第二个元素的起始位应该是8才能满足其大小8的整数倍，因此需要填充 4 个） + 8 + 4（此时地址位是16，满足float大小4的整数倍） + 4(此时不填充时整体大小是20，不满足最大元素大小8字节整数倍的要求，因此需补充4个) = 24</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> Student </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> score</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;" loading="lazy">​</a></h2><p>结构体是 C 语言中非常重要的数据类型之一，它提供了一种灵活的方式来组合不同类型的数据。通过结构体定义和访问，我们可以将多个相关元素包装成一个单独的整体，并进行操作和修改。在实际开发中，结构体常用于描述复杂的数据结构和存储大量相关数据。</p><hr>`,30);function r(F,y,D,i,C,A){const s=n("GoogleAdsense");return l(),p("div",null,[c,o(s)])}const h=a(t,[["render",r]]);export{u as __pageData,h as default};
